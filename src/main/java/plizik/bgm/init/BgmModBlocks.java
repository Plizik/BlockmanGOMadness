
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package plizik.bgm.init;

import plizik.bgm.block.YellowgiftBlock;
import plizik.bgm.block.WoolyellowBlock;
import plizik.bgm.block.WoolwhiteBlock;
import plizik.bgm.block.WoolsilverBlock;
import plizik.bgm.block.WoolredBlock;
import plizik.bgm.block.WoolpurpleBlock;
import plizik.bgm.block.WoolpinkBlock;
import plizik.bgm.block.WoolorangeBlock;
import plizik.bgm.block.WoolmagentaBlock;
import plizik.bgm.block.WoollimeBlock;
import plizik.bgm.block.WoollightblueBlock;
import plizik.bgm.block.WoolgreenBlock;
import plizik.bgm.block.WoolgrayBlock;
import plizik.bgm.block.WoolcyanBlock;
import plizik.bgm.block.WoolbrownBlock;
import plizik.bgm.block.WoolblueBlock;
import plizik.bgm.block.WoolblackBlock;
import plizik.bgm.block.WetspongeBlock;
import plizik.bgm.block.WebBlock;
import plizik.bgm.block.WaterBlock;
import plizik.bgm.block.WallofwoolBlock;
import plizik.bgm.block.VineBlock;
import plizik.bgm.block.TrapdoorBlock;
import plizik.bgm.block.TowerBlock;
import plizik.bgm.block.TorchBlock;
import plizik.bgm.block.TNTBlock;
import plizik.bgm.block.SugarcaneBlock;
import plizik.bgm.block.StoneslabBlock;
import plizik.bgm.block.StonegraniteBlock;
import plizik.bgm.block.StonebricksBlock;
import plizik.bgm.block.StoneBlock;
import plizik.bgm.block.StickypistonBlock;
import plizik.bgm.block.StarblockBlock;
import plizik.bgm.block.SpruceplanksBlock;
import plizik.bgm.block.SprucelogBlock;
import plizik.bgm.block.SpongeBlock;
import plizik.bgm.block.SoulsandBlock;
import plizik.bgm.block.SnowblockBlock;
import plizik.bgm.block.SmoothgraniteBlock;
import plizik.bgm.block.SmoothdioriteBlock;
import plizik.bgm.block.SlimeblockBlock;
import plizik.bgm.block.SkyblockgrassBlock;
import plizik.bgm.block.SkyblockdirtBlock;
import plizik.bgm.block.SilverbarBlock;
import plizik.bgm.block.ShulkeryellowBlock;
import plizik.bgm.block.ShulkerwhiteBlock;
import plizik.bgm.block.ShulkersilverBlock;
import plizik.bgm.block.ShulkerredBlock;
import plizik.bgm.block.ShulkerpinkBlock;
import plizik.bgm.block.ShulkerorangeBlock;
import plizik.bgm.block.ShulkermagentaBlock;
import plizik.bgm.block.ShulkerlimeBlock;
import plizik.bgm.block.ShulkerlightblueBlock;
import plizik.bgm.block.ShulkergreenBlock;
import plizik.bgm.block.ShulkergrayBlock;
import plizik.bgm.block.ShulkercyanBlock;
import plizik.bgm.block.ShulkerbrownBlock;
import plizik.bgm.block.ShulkerblueBlock;
import plizik.bgm.block.ShulkerblackBlock;
import plizik.bgm.block.ShulkerBlock;
import plizik.bgm.block.SealanternBlock;
import plizik.bgm.block.SandstonesmoothBlock;
import plizik.bgm.block.Sandstonesmooth2Block;
import plizik.bgm.block.SandstoneBlock;
import plizik.bgm.block.SandBlock;
import plizik.bgm.block.RoughprismarineBlock;
import plizik.bgm.block.RedstonetorchBlock;
import plizik.bgm.block.RedstoneoreBlock;
import plizik.bgm.block.RedstonelamponBlock;
import plizik.bgm.block.RedstonelampBlock;
import plizik.bgm.block.Redstonelamp2Block;
import plizik.bgm.block.RedstoneblockBlock;
import plizik.bgm.block.RedsandstonecarvedBlock;
import plizik.bgm.block.Redsandstonecarved2Block;
import plizik.bgm.block.RedsandstoneBlock;
import plizik.bgm.block.RedsandBlock;
import plizik.bgm.block.RedmushroomsmallBlock;
import plizik.bgm.block.RedmushroomBlock;
import plizik.bgm.block.RedgiftBlock;
import plizik.bgm.block.QuartzpillarBlock;
import plizik.bgm.block.QuartzoreBlock;
import plizik.bgm.block.QuartzblockBlock;
import plizik.bgm.block.PurplepillarBlock;
import plizik.bgm.block.PurpleblockBlock;
import plizik.bgm.block.PumpkinlitBlock;
import plizik.bgm.block.PumpkinBlock;
import plizik.bgm.block.PrismarinebricksBlock;
import plizik.bgm.block.PrismarineBlock;
import plizik.bgm.block.PolishedstoneBlock;
import plizik.bgm.block.PolishedgraniteBlock;
import plizik.bgm.block.PolishedandesiteBlock;
import plizik.bgm.block.Polishedandesite2Block;
import plizik.bgm.block.PistonBlock;
import plizik.bgm.block.PackediceBlock;
import plizik.bgm.block.OlddirtpathBlock;
import plizik.bgm.block.ObsidianbedwarsBlock;
import plizik.bgm.block.ObsidianBlock;
import plizik.bgm.block.ObserverBlock;
import plizik.bgm.block.OakplanksBlock;
import plizik.bgm.block.OaklogBlock;
import plizik.bgm.block.NoteblockBlock;
import plizik.bgm.block.NetherwartblockBlock;
import plizik.bgm.block.NetherrackBlock;
import plizik.bgm.block.NetherbrickredBlock;
import plizik.bgm.block.NetherbrickBlock;
import plizik.bgm.block.MyceliumBlock;
import plizik.bgm.block.MushroomstemBlock;
import plizik.bgm.block.MovingpistonBlock;
import plizik.bgm.block.MossystonebricksBlock;
import plizik.bgm.block.MossycobblestoneBlock;
import plizik.bgm.block.MoneyblockBlock;
import plizik.bgm.block.MobspawnerBlock;
import plizik.bgm.block.MelonBlock;
import plizik.bgm.block.MagmaBlock;
import plizik.bgm.block.LuckyblockweaponBlock;
import plizik.bgm.block.LuckyblockstrangeBlock;
import plizik.bgm.block.LuckyblockpropBlock;
import plizik.bgm.block.LuckyblockeventBlock;
import plizik.bgm.block.LuckyblockarmorBlock;
import plizik.bgm.block.LavaBlock;
import plizik.bgm.block.LapisblockBlock;
import plizik.bgm.block.LadderBlock;
import plizik.bgm.block.JungleplanksBlock;
import plizik.bgm.block.JunglelogBlock;
import plizik.bgm.block.Junglelog2Block;
import plizik.bgm.block.JukeboxBlock;
import plizik.bgm.block.IrontrapdoorBlock;
import plizik.bgm.block.IronoreBlock;
import plizik.bgm.block.IronblockBlock;
import plizik.bgm.block.IronbarBlock;
import plizik.bgm.block.IceBlock;
import plizik.bgm.block.HellglowstoneBlock;
import plizik.bgm.block.HayblockBlock;
import plizik.bgm.block.HardenedclayyellowBlock;
import plizik.bgm.block.HardenedclaywhiteBlock;
import plizik.bgm.block.HardenedclaysilverBlock;
import plizik.bgm.block.HardenedclayredBlock;
import plizik.bgm.block.HardenedclaypurpleBlock;
import plizik.bgm.block.HardenedclaypinkBlock;
import plizik.bgm.block.HardenedclayorangeBlock;
import plizik.bgm.block.HardenedclaymagentaBlock;
import plizik.bgm.block.HardenedclaylimeBlock;
import plizik.bgm.block.HardenedclaylightblueBlock;
import plizik.bgm.block.HardenedclaygreenBlock;
import plizik.bgm.block.HardenedclaygrayBlock;
import plizik.bgm.block.HardenedclaycyanBlock;
import plizik.bgm.block.HardenedclaybrownBlock;
import plizik.bgm.block.HardenedclayblueBlock;
import plizik.bgm.block.HardenedclayblackBlock;
import plizik.bgm.block.HardenedclayBlock;
import plizik.bgm.block.GreengiftBlock;
import plizik.bgm.block.GravelBlock;
import plizik.bgm.block.GoldoreBlock;
import plizik.bgm.block.GoldblockBlock;
import plizik.bgm.block.GoldbarsBlock;
import plizik.bgm.block.GlowstoneBlock;
import plizik.bgm.block.GlassyellowBlock;
import plizik.bgm.block.GlasswhiteBlock;
import plizik.bgm.block.GlasssilverBlock;
import plizik.bgm.block.Glasssilver2Block;
import plizik.bgm.block.GlassredBlock;
import plizik.bgm.block.GlasspurpleBlock;
import plizik.bgm.block.Glasspurple2Block;
import plizik.bgm.block.GlasspinkBlock;
import plizik.bgm.block.GlasspaneyellowBlock;
import plizik.bgm.block.GlasspanewhiteBlock;
import plizik.bgm.block.GlasspanesilverBlock;
import plizik.bgm.block.GlasspaneredBlock;
import plizik.bgm.block.GlasspanepurpleBlock;
import plizik.bgm.block.GlasspanepinkBlock;
import plizik.bgm.block.GlasspaneorangeBlock;
import plizik.bgm.block.GlasspanemagentaBlock;
import plizik.bgm.block.GlasspanelimeBlock;
import plizik.bgm.block.GlasspanelightblueBlock;
import plizik.bgm.block.GlasspanegreenBlock;
import plizik.bgm.block.GlasspanegrayBlock;
import plizik.bgm.block.GlasspanecyanBlock;
import plizik.bgm.block.GlasspanebrownBlock;
import plizik.bgm.block.GlasspaneblueBlock;
import plizik.bgm.block.GlasspaneblackBlock;
import plizik.bgm.block.GlasspaneBlock;
import plizik.bgm.block.GlassorangeBlock;
import plizik.bgm.block.GlassnewBlock;
import plizik.bgm.block.GlassmagentaBlock;
import plizik.bgm.block.GlasslimeBlock;
import plizik.bgm.block.GlasslightblueBlock;
import plizik.bgm.block.GlassgreenBlock;
import plizik.bgm.block.GlassgrayBlock;
import plizik.bgm.block.GlasscyanBlock;
import plizik.bgm.block.GlassbrownBlock;
import plizik.bgm.block.GlassblueBlock;
import plizik.bgm.block.GlassblackBlock;
import plizik.bgm.block.GlassBlock;
import plizik.bgm.block.GiftyellowBlock;
import plizik.bgm.block.GiftredBlock;
import plizik.bgm.block.GiftgreenBlock;
import plizik.bgm.block.FurnaceBlock;
import plizik.bgm.block.EndstoneBlock;
import plizik.bgm.block.EndframeBlock;
import plizik.bgm.block.EndbrickBlock;
import plizik.bgm.block.EnchantingtableBlock;
import plizik.bgm.block.EmeraldoreBlock;
import plizik.bgm.block.EmeraldblockBlock;
import plizik.bgm.block.DirtoldpodzolBlock;
import plizik.bgm.block.DirtoldBlock;
import plizik.bgm.block.DioriteBlock;
import plizik.bgm.block.DiamondoreBlock;
import plizik.bgm.block.DiamondblockBlock;
import plizik.bgm.block.DarkprismarineBlock;
import plizik.bgm.block.DarkoaklogBlock;
import plizik.bgm.block.CraftingTableBlock;
import plizik.bgm.block.CrackedstonebricksBlock;
import plizik.bgm.block.ConcreteyellowBlock;
import plizik.bgm.block.ConcretewhiteBlock;
import plizik.bgm.block.ConcretesilverBlock;
import plizik.bgm.block.ConcreteredBlock;
import plizik.bgm.block.ConcretepurpleBlock;
import plizik.bgm.block.ConcretepowderyellowBlock;
import plizik.bgm.block.ConcretepowderwhiteBlock;
import plizik.bgm.block.ConcretepowdersilverBlock;
import plizik.bgm.block.ConcretepowderredBlock;
import plizik.bgm.block.ConcretepowderpurpleBlock;
import plizik.bgm.block.ConcretepowderpinkBlock;
import plizik.bgm.block.ConcretepowderorangeBlock;
import plizik.bgm.block.ConcretepowdermagentaBlock;
import plizik.bgm.block.ConcretepowderlimeBlock;
import plizik.bgm.block.ConcretepowderlightblueBlock;
import plizik.bgm.block.ConcretepowdergreenBlock;
import plizik.bgm.block.ConcretepowdergrayBlock;
import plizik.bgm.block.ConcretepowdercyanBlock;
import plizik.bgm.block.ConcretepowderbrownBlock;
import plizik.bgm.block.ConcretepowderblueBlock;
import plizik.bgm.block.ConcretepowderblackBlock;
import plizik.bgm.block.ConcretepinkBlock;
import plizik.bgm.block.ConcreteorangeBlock;
import plizik.bgm.block.ConcretemagentaBlock;
import plizik.bgm.block.ConcretelimeBlock;
import plizik.bgm.block.ConcretelightblueBlock;
import plizik.bgm.block.ConcretegreenBlock;
import plizik.bgm.block.ConcretegrayBlock;
import plizik.bgm.block.ConcretecyanBlock;
import plizik.bgm.block.ConcretebrownBlock;
import plizik.bgm.block.ConcreteblueBlock;
import plizik.bgm.block.ConcreteblackBlock;
import plizik.bgm.block.CommandblockBlock;
import plizik.bgm.block.CobblestoneBlock;
import plizik.bgm.block.CoarsedirtBlock;
import plizik.bgm.block.CoaloreBlock;
import plizik.bgm.block.CoalblockBlock;
import plizik.bgm.block.ClayBlock;
import plizik.bgm.block.ChristmaspureyellowBlock;
import plizik.bgm.block.ChristmaspurewhiteBlock;
import plizik.bgm.block.ChristmaspureredBlock;
import plizik.bgm.block.ChristmaspurepurpleBlock;
import plizik.bgm.block.ChristmaspurepinkBlock;
import plizik.bgm.block.ChristmaspureorangeBlock;
import plizik.bgm.block.ChristmaspuremagentaBlock;
import plizik.bgm.block.ChristmaspurelimeBlock;
import plizik.bgm.block.ChristmaspurelightgrayBlock;
import plizik.bgm.block.ChristmaspurelightblueBlock;
import plizik.bgm.block.ChristmaspuregreenBlock;
import plizik.bgm.block.ChristmaspuregrayBlock;
import plizik.bgm.block.ChristmaspurecyanBlock;
import plizik.bgm.block.ChristmaspurebrownBlock;
import plizik.bgm.block.ChristmaspureblueBlock;
import plizik.bgm.block.ChristmaspureblackBlock;
import plizik.bgm.block.ChristmasblockyellowBlock;
import plizik.bgm.block.ChristmasblockwhiteBlock;
import plizik.bgm.block.ChristmasblockredBlock;
import plizik.bgm.block.ChristmasblockpurpleBlock;
import plizik.bgm.block.ChristmasblockpinkBlock;
import plizik.bgm.block.ChristmasblockorangeBlock;
import plizik.bgm.block.ChristmasblockmagentaBlock;
import plizik.bgm.block.ChristmasblocklimeBlock;
import plizik.bgm.block.ChristmasblocklightgrayBlock;
import plizik.bgm.block.ChristmasblocklightblueBlock;
import plizik.bgm.block.ChristmasblockgreenBlock;
import plizik.bgm.block.ChristmasblockgrayBlock;
import plizik.bgm.block.ChristmasblockcyanBlock;
import plizik.bgm.block.ChristmasblockbrownBlock;
import plizik.bgm.block.ChristmasblockblueBlock;
import plizik.bgm.block.ChristmasblockblackBlock;
import plizik.bgm.block.CarvedstonebricksBlock;
import plizik.bgm.block.CarpetroadBlock;
import plizik.bgm.block.BwdefenceglassBlock;
import plizik.bgm.block.BrownmushroomsmallBlock;
import plizik.bgm.block.BrownmushroomBlock;
import plizik.bgm.block.BookshelfBlock;
import plizik.bgm.block.BoneblockBlock;
import plizik.bgm.block.BirchplanksBlock;
import plizik.bgm.block.BirchlogBlock;
import plizik.bgm.block.BigoakplanksBlock;
import plizik.bgm.block.BedwarsspongeBlock;
import plizik.bgm.block.BedrockBlock;
import plizik.bgm.block.BeaconBlock;
import plizik.bgm.block.AndesiteBlock;
import plizik.bgm.block.AirwallBlock;
import plizik.bgm.BgmMod;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.client.event.ColorHandlerEvent;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;

public class BgmModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, BgmMod.MODID);
	public static final RegistryObject<Block> AIRWALL = REGISTRY.register("airwall", () -> new AirwallBlock());
	public static final RegistryObject<Block> BEACON = REGISTRY.register("beacon", () -> new BeaconBlock());
	public static final RegistryObject<Block> BEDROCK = REGISTRY.register("bedrock", () -> new BedrockBlock());
	public static final RegistryObject<Block> BONEBLOCK = REGISTRY.register("boneblock", () -> new BoneblockBlock());
	public static final RegistryObject<Block> BOOKSHELF = REGISTRY.register("bookshelf", () -> new BookshelfBlock());
	public static final RegistryObject<Block> CLAY = REGISTRY.register("clay", () -> new ClayBlock());
	public static final RegistryObject<Block> COALBLOCK = REGISTRY.register("coalblock", () -> new CoalblockBlock());
	public static final RegistryObject<Block> COALORE = REGISTRY.register("coalore", () -> new CoaloreBlock());
	public static final RegistryObject<Block> MOSSYCOBBLESTONE = REGISTRY.register("mossycobblestone", () -> new MossycobblestoneBlock());
	public static final RegistryObject<Block> COMMANDBLOCK = REGISTRY.register("commandblock", () -> new CommandblockBlock());
	public static final RegistryObject<Block> CONCRETEBLACK = REGISTRY.register("concreteblack", () -> new ConcreteblackBlock());
	public static final RegistryObject<Block> CONCRETEBLUE = REGISTRY.register("concreteblue", () -> new ConcreteblueBlock());
	public static final RegistryObject<Block> CONCRETEBROWN = REGISTRY.register("concretebrown", () -> new ConcretebrownBlock());
	public static final RegistryObject<Block> CONCRETECYAN = REGISTRY.register("concretecyan", () -> new ConcretecyanBlock());
	public static final RegistryObject<Block> CONCRETEGRAY = REGISTRY.register("concretegray", () -> new ConcretegrayBlock());
	public static final RegistryObject<Block> CONCRETEGREEN = REGISTRY.register("concretegreen", () -> new ConcretegreenBlock());
	public static final RegistryObject<Block> CONCRETELIGHTBLUE = REGISTRY.register("concretelightblue", () -> new ConcretelightblueBlock());
	public static final RegistryObject<Block> CONCRETELIME = REGISTRY.register("concretelime", () -> new ConcretelimeBlock());
	public static final RegistryObject<Block> CONCRETEMAGENTA = REGISTRY.register("concretemagenta", () -> new ConcretemagentaBlock());
	public static final RegistryObject<Block> CONCRETEORANGE = REGISTRY.register("concreteorange", () -> new ConcreteorangeBlock());
	public static final RegistryObject<Block> CONCRETEPINK = REGISTRY.register("concretepink", () -> new ConcretepinkBlock());
	public static final RegistryObject<Block> CONCRETEPURPLE = REGISTRY.register("concretepurple", () -> new ConcretepurpleBlock());
	public static final RegistryObject<Block> CONCRETERED = REGISTRY.register("concretered", () -> new ConcreteredBlock());
	public static final RegistryObject<Block> CONCRETESILVER = REGISTRY.register("concretesilver", () -> new ConcretesilverBlock());
	public static final RegistryObject<Block> CONCRETEWHITE = REGISTRY.register("concretewhite", () -> new ConcretewhiteBlock());
	public static final RegistryObject<Block> CONCRETEYELLOW = REGISTRY.register("concreteyellow", () -> new ConcreteyellowBlock());
	public static final RegistryObject<Block> WOOLWHITE = REGISTRY.register("woolwhite", () -> new WoolwhiteBlock());
	public static final RegistryObject<Block> GLASS = REGISTRY.register("glass", () -> new GlassBlock());
	public static final RegistryObject<Block> DIAMONDBLOCK = REGISTRY.register("diamondblock", () -> new DiamondblockBlock());
	public static final RegistryObject<Block> DIAMONDORE = REGISTRY.register("diamondore", () -> new DiamondoreBlock());
	public static final RegistryObject<Block> DIRTOLD = REGISTRY.register("dirtold", () -> new DirtoldBlock());
	public static final RegistryObject<Block> EMERALDBLOCK = REGISTRY.register("emeraldblock", () -> new EmeraldblockBlock());
	public static final RegistryObject<Block> EMERALDORE = REGISTRY.register("emeraldore", () -> new EmeraldoreBlock());
	public static final RegistryObject<Block> ENCHANTINGTABLE = REGISTRY.register("enchantingtable", () -> new EnchantingtableBlock());
	public static final RegistryObject<Block> ENDFRAME = REGISTRY.register("endframe", () -> new EndframeBlock());
	public static final RegistryObject<Block> GLASSPANE = REGISTRY.register("glasspane", () -> new GlasspaneBlock());
	public static final RegistryObject<Block> GLOWSTONE = REGISTRY.register("glowstone", () -> new GlowstoneBlock());
	public static final RegistryObject<Block> GOLDBLOCK = REGISTRY.register("goldblock", () -> new GoldblockBlock());
	public static final RegistryObject<Block> GOLDORE = REGISTRY.register("goldore", () -> new GoldoreBlock());
	public static final RegistryObject<Block> GRAVEL = REGISTRY.register("gravel", () -> new GravelBlock());
	public static final RegistryObject<Block> HARDENEDCLAY = REGISTRY.register("hardenedclay", () -> new HardenedclayBlock());
	public static final RegistryObject<Block> HARDENEDCLAYBLACK = REGISTRY.register("hardenedclayblack", () -> new HardenedclayblackBlock());
	public static final RegistryObject<Block> HARDENEDCLAYBLUE = REGISTRY.register("hardenedclayblue", () -> new HardenedclayblueBlock());
	public static final RegistryObject<Block> HARDENEDCLAYBROWN = REGISTRY.register("hardenedclaybrown", () -> new HardenedclaybrownBlock());
	public static final RegistryObject<Block> HARDENEDCLAYCYAN = REGISTRY.register("hardenedclaycyan", () -> new HardenedclaycyanBlock());
	public static final RegistryObject<Block> HARDENEDCLAYGRAY = REGISTRY.register("hardenedclaygray", () -> new HardenedclaygrayBlock());
	public static final RegistryObject<Block> HARDENEDCLAYGREEN = REGISTRY.register("hardenedclaygreen", () -> new HardenedclaygreenBlock());
	public static final RegistryObject<Block> HARDENEDCLAYLIGHTBLUE = REGISTRY.register("hardenedclaylightblue",
			() -> new HardenedclaylightblueBlock());
	public static final RegistryObject<Block> HARDENEDCLAYLIME = REGISTRY.register("hardenedclaylime", () -> new HardenedclaylimeBlock());
	public static final RegistryObject<Block> HARDENEDCLAYMAGENTA = REGISTRY.register("hardenedclaymagenta", () -> new HardenedclaymagentaBlock());
	public static final RegistryObject<Block> HARDENEDCLAYORANGE = REGISTRY.register("hardenedclayorange", () -> new HardenedclayorangeBlock());
	public static final RegistryObject<Block> HARDENEDCLAYPINK = REGISTRY.register("hardenedclaypink", () -> new HardenedclaypinkBlock());
	public static final RegistryObject<Block> HARDENEDCLAYPURPLE = REGISTRY.register("hardenedclaypurple", () -> new HardenedclaypurpleBlock());
	public static final RegistryObject<Block> HARDENEDCLAYRED = REGISTRY.register("hardenedclayred", () -> new HardenedclayredBlock());
	public static final RegistryObject<Block> HARDENEDCLAYSILVER = REGISTRY.register("hardenedclaysilver", () -> new HardenedclaysilverBlock());
	public static final RegistryObject<Block> HARDENEDCLAYWHITE = REGISTRY.register("hardenedclaywhite", () -> new HardenedclaywhiteBlock());
	public static final RegistryObject<Block> HARDENEDCLAYYELLOW = REGISTRY.register("hardenedclayyellow", () -> new HardenedclayyellowBlock());
	public static final RegistryObject<Block> HAYBLOCK = REGISTRY.register("hayblock", () -> new HayblockBlock());
	public static final RegistryObject<Block> ICE = REGISTRY.register("ice", () -> new IceBlock());
	public static final RegistryObject<Block> PACKEDICE = REGISTRY.register("packedice", () -> new PackediceBlock());
	public static final RegistryObject<Block> IRONBAR = REGISTRY.register("ironbar", () -> new IronbarBlock());
	public static final RegistryObject<Block> IRONBLOCK = REGISTRY.register("ironblock", () -> new IronblockBlock());
	public static final RegistryObject<Block> IRONORE = REGISTRY.register("ironore", () -> new IronoreBlock());
	public static final RegistryObject<Block> JUKEBOX = REGISTRY.register("jukebox", () -> new JukeboxBlock());
	public static final RegistryObject<Block> LADDER = REGISTRY.register("ladder", () -> new LadderBlock());
	public static final RegistryObject<Block> LAPISBLOCK = REGISTRY.register("lapisblock", () -> new LapisblockBlock());
	public static final RegistryObject<Block> DARKOAKLOG = REGISTRY.register("darkoaklog", () -> new DarkoaklogBlock());
	public static final RegistryObject<Block> BIRCHLOG = REGISTRY.register("birchlog", () -> new BirchlogBlock());
	public static final RegistryObject<Block> JUNGLELOG = REGISTRY.register("junglelog", () -> new JunglelogBlock());
	public static final RegistryObject<Block> OAKLOG = REGISTRY.register("oaklog", () -> new OaklogBlock());
	public static final RegistryObject<Block> SPRUCELOG = REGISTRY.register("sprucelog", () -> new SprucelogBlock());
	public static final RegistryObject<Block> MAGMA = REGISTRY.register("magma", () -> new MagmaBlock());
	public static final RegistryObject<Block> MELON = REGISTRY.register("melon", () -> new MelonBlock());
	public static final RegistryObject<Block> MOBSPAWNER = REGISTRY.register("mobspawner", () -> new MobspawnerBlock());
	public static final RegistryObject<Block> MUSHROOMSTEM = REGISTRY.register("mushroomstem", () -> new MushroomstemBlock());
	public static final RegistryObject<Block> BROWNMUSHROOM = REGISTRY.register("brownmushroom", () -> new BrownmushroomBlock());
	public static final RegistryObject<Block> REDMUSHROOM = REGISTRY.register("redmushroom", () -> new RedmushroomBlock());
	public static final RegistryObject<Block> MYCELIUM = REGISTRY.register("mycelium", () -> new MyceliumBlock());
	public static final RegistryObject<Block> NETHERBRICK = REGISTRY.register("netherbrick", () -> new NetherbrickBlock());
	public static final RegistryObject<Block> NETHERRACK = REGISTRY.register("netherrack", () -> new NetherrackBlock());
	public static final RegistryObject<Block> NOTEBLOCK = REGISTRY.register("noteblock", () -> new NoteblockBlock());
	public static final RegistryObject<Block> OBSIDIAN = REGISTRY.register("obsidian", () -> new ObsidianBlock());
	public static final RegistryObject<Block> PISTON = REGISTRY.register("piston", () -> new PistonBlock());
	public static final RegistryObject<Block> BIGOAKPLANKS = REGISTRY.register("bigoakplanks", () -> new BigoakplanksBlock());
	public static final RegistryObject<Block> BIRCHPLANKS = REGISTRY.register("birchplanks", () -> new BirchplanksBlock());
	public static final RegistryObject<Block> JUNGLEPLANKS = REGISTRY.register("jungleplanks", () -> new JungleplanksBlock());
	public static final RegistryObject<Block> OAKPLANKS = REGISTRY.register("oakplanks", () -> new OakplanksBlock());
	public static final RegistryObject<Block> SPRUCEPLANKS = REGISTRY.register("spruceplanks", () -> new SpruceplanksBlock());
	public static final RegistryObject<Block> PRISMARINE = REGISTRY.register("prismarine", () -> new PrismarineBlock());
	public static final RegistryObject<Block> PRISMARINEBRICKS = REGISTRY.register("prismarinebricks", () -> new PrismarinebricksBlock());
	public static final RegistryObject<Block> DARKPRISMARINE = REGISTRY.register("darkprismarine", () -> new DarkprismarineBlock());
	public static final RegistryObject<Block> PUMPKIN = REGISTRY.register("pumpkin", () -> new PumpkinBlock());
	public static final RegistryObject<Block> PURPLEBLOCK = REGISTRY.register("purpleblock", () -> new PurpleblockBlock());
	public static final RegistryObject<Block> PURPLEPILLAR = REGISTRY.register("purplepillar", () -> new PurplepillarBlock());
	public static final RegistryObject<Block> QUARTZBLOCK = REGISTRY.register("quartzblock", () -> new QuartzblockBlock());
	public static final RegistryObject<Block> QUARTZPILLAR = REGISTRY.register("quartzpillar", () -> new QuartzpillarBlock());
	public static final RegistryObject<Block> QUARTZORE = REGISTRY.register("quartzore", () -> new QuartzoreBlock());
	public static final RegistryObject<Block> NETHERBRICKRED = REGISTRY.register("netherbrickred", () -> new NetherbrickredBlock());
	public static final RegistryObject<Block> REDSAND = REGISTRY.register("redsand", () -> new RedsandBlock());
	public static final RegistryObject<Block> REDSANDSTONE = REGISTRY.register("redsandstone", () -> new RedsandstoneBlock());
	public static final RegistryObject<Block> REDSANDSTONECARVED = REGISTRY.register("redsandstonecarved", () -> new RedsandstonecarvedBlock());
	public static final RegistryObject<Block> REDSTONEBLOCK = REGISTRY.register("redstoneblock", () -> new RedstoneblockBlock());
	public static final RegistryObject<Block> REDSTONELAMP = REGISTRY.register("redstonelamp", () -> new RedstonelampBlock());
	public static final RegistryObject<Block> REDSTONEORE = REGISTRY.register("redstoneore", () -> new RedstoneoreBlock());
	public static final RegistryObject<Block> REDSTONETORCH = REGISTRY.register("redstonetorch", () -> new RedstonetorchBlock());
	public static final RegistryObject<Block> SUGARCANE = REGISTRY.register("sugarcane", () -> new SugarcaneBlock());
	public static final RegistryObject<Block> SAND = REGISTRY.register("sand", () -> new SandBlock());
	public static final RegistryObject<Block> SANDSTONE = REGISTRY.register("sandstone", () -> new SandstoneBlock());
	public static final RegistryObject<Block> SANDSTONESMOOTH = REGISTRY.register("sandstonesmooth", () -> new SandstonesmoothBlock());
	public static final RegistryObject<Block> SEALANTERN = REGISTRY.register("sealantern", () -> new SealanternBlock());
	public static final RegistryObject<Block> SHULKER = REGISTRY.register("shulker", () -> new ShulkerBlock());
	public static final RegistryObject<Block> SHULKERBLACK = REGISTRY.register("shulkerblack", () -> new ShulkerblackBlock());
	public static final RegistryObject<Block> SHULKERBLUE = REGISTRY.register("shulkerblue", () -> new ShulkerblueBlock());
	public static final RegistryObject<Block> SHULKERBROWN = REGISTRY.register("shulkerbrown", () -> new ShulkerbrownBlock());
	public static final RegistryObject<Block> SHULKERCYAN = REGISTRY.register("shulkercyan", () -> new ShulkercyanBlock());
	public static final RegistryObject<Block> SHULKERGRAY = REGISTRY.register("shulkergray", () -> new ShulkergrayBlock());
	public static final RegistryObject<Block> SHULKERGREEN = REGISTRY.register("shulkergreen", () -> new ShulkergreenBlock());
	public static final RegistryObject<Block> SHULKERLIGHTBLUE = REGISTRY.register("shulkerlightblue", () -> new ShulkerlightblueBlock());
	public static final RegistryObject<Block> SHULKERLIME = REGISTRY.register("shulkerlime", () -> new ShulkerlimeBlock());
	public static final RegistryObject<Block> SHULKERMAGENTA = REGISTRY.register("shulkermagenta", () -> new ShulkermagentaBlock());
	public static final RegistryObject<Block> SHULKERORANGE = REGISTRY.register("shulkerorange", () -> new ShulkerorangeBlock());
	public static final RegistryObject<Block> SHULKERPINK = REGISTRY.register("shulkerpink", () -> new ShulkerpinkBlock());
	public static final RegistryObject<Block> SHULKERRED = REGISTRY.register("shulkerred", () -> new ShulkerredBlock());
	public static final RegistryObject<Block> SHULKERSILVER = REGISTRY.register("shulkersilver", () -> new ShulkersilverBlock());
	public static final RegistryObject<Block> SHULKERWHITE = REGISTRY.register("shulkerwhite", () -> new ShulkerwhiteBlock());
	public static final RegistryObject<Block> SHULKERYELLOW = REGISTRY.register("shulkeryellow", () -> new ShulkeryellowBlock());
	public static final RegistryObject<Block> SLIMEBLOCK = REGISTRY.register("slimeblock", () -> new SlimeblockBlock());
	public static final RegistryObject<Block> SNOWBLOCK = REGISTRY.register("snowblock", () -> new SnowblockBlock());
	public static final RegistryObject<Block> SOULSAND = REGISTRY.register("soulsand", () -> new SoulsandBlock());
	public static final RegistryObject<Block> SPONGE = REGISTRY.register("sponge", () -> new SpongeBlock());
	public static final RegistryObject<Block> WETSPONGE = REGISTRY.register("wetsponge", () -> new WetspongeBlock());
	public static final RegistryObject<Block> STONE = REGISTRY.register("stone", () -> new StoneBlock());
	public static final RegistryObject<Block> STONEGRANITE = REGISTRY.register("stonegranite", () -> new StonegraniteBlock());
	public static final RegistryObject<Block> POLISHEDGRANITE = REGISTRY.register("polishedgranite", () -> new PolishedgraniteBlock());
	public static final RegistryObject<Block> ANDESITE = REGISTRY.register("andesite", () -> new AndesiteBlock());
	public static final RegistryObject<Block> POLISHEDANDESITE = REGISTRY.register("polishedandesite", () -> new PolishedandesiteBlock());
	public static final RegistryObject<Block> POLISHEDSTONE = REGISTRY.register("polishedstone", () -> new PolishedstoneBlock());
	public static final RegistryObject<Block> POLISHEDANDESITE_2 = REGISTRY.register("polishedandesite_2", () -> new Polishedandesite2Block());
	public static final RegistryObject<Block> DIORITE = REGISTRY.register("diorite", () -> new DioriteBlock());
	public static final RegistryObject<Block> SMOOTHDIORITE = REGISTRY.register("smoothdiorite", () -> new SmoothdioriteBlock());
	public static final RegistryObject<Block> SMOOTHGRANITE = REGISTRY.register("smoothgranite", () -> new SmoothgraniteBlock());
	public static final RegistryObject<Block> STONESLAB = REGISTRY.register("stoneslab", () -> new StoneslabBlock());
	public static final RegistryObject<Block> STONEBRICKS = REGISTRY.register("stonebricks", () -> new StonebricksBlock());
	public static final RegistryObject<Block> CARVEDSTONEBRICKS = REGISTRY.register("carvedstonebricks", () -> new CarvedstonebricksBlock());
	public static final RegistryObject<Block> CRACKEDSTONEBRICKS = REGISTRY.register("crackedstonebricks", () -> new CrackedstonebricksBlock());
	public static final RegistryObject<Block> MOSSYSTONEBRICKS = REGISTRY.register("mossystonebricks", () -> new MossystonebricksBlock());
	public static final RegistryObject<Block> TNT = REGISTRY.register("tnt", () -> new TNTBlock());
	public static final RegistryObject<Block> TORCH = REGISTRY.register("torch", () -> new TorchBlock());
	public static final RegistryObject<Block> TRAPDOOR = REGISTRY.register("trapdoor", () -> new TrapdoorBlock());
	public static final RegistryObject<Block> WEB = REGISTRY.register("web", () -> new WebBlock());
	public static final RegistryObject<Block> WOOLBLACK = REGISTRY.register("woolblack", () -> new WoolblackBlock());
	public static final RegistryObject<Block> WOOLBLUE = REGISTRY.register("woolblue", () -> new WoolblueBlock());
	public static final RegistryObject<Block> WOOLBROWN = REGISTRY.register("woolbrown", () -> new WoolbrownBlock());
	public static final RegistryObject<Block> WOOLCYAN = REGISTRY.register("woolcyan", () -> new WoolcyanBlock());
	public static final RegistryObject<Block> WOOLGRAY = REGISTRY.register("woolgray", () -> new WoolgrayBlock());
	public static final RegistryObject<Block> WOOLGREEN = REGISTRY.register("woolgreen", () -> new WoolgreenBlock());
	public static final RegistryObject<Block> WOOLLIGHTBLUE = REGISTRY.register("woollightblue", () -> new WoollightblueBlock());
	public static final RegistryObject<Block> WOOLLIME = REGISTRY.register("woollime", () -> new WoollimeBlock());
	public static final RegistryObject<Block> WOOLMAGENTA = REGISTRY.register("woolmagenta", () -> new WoolmagentaBlock());
	public static final RegistryObject<Block> WOOLORANGE = REGISTRY.register("woolorange", () -> new WoolorangeBlock());
	public static final RegistryObject<Block> WOOLPINK = REGISTRY.register("woolpink", () -> new WoolpinkBlock());
	public static final RegistryObject<Block> WOOLPURPLE = REGISTRY.register("woolpurple", () -> new WoolpurpleBlock());
	public static final RegistryObject<Block> WOOLRED = REGISTRY.register("woolred", () -> new WoolredBlock());
	public static final RegistryObject<Block> WOOLSILVER = REGISTRY.register("woolsilver", () -> new WoolsilverBlock());
	public static final RegistryObject<Block> WOOLYELLOW = REGISTRY.register("woolyellow", () -> new WoolyellowBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKWHITE = REGISTRY.register("christmasblockwhite", () -> new ChristmasblockwhiteBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKORANGE = REGISTRY.register("christmasblockorange", () -> new ChristmasblockorangeBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKMAGENTA = REGISTRY.register("christmasblockmagenta",
			() -> new ChristmasblockmagentaBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKLIGHTBLUE = REGISTRY.register("christmasblocklightblue",
			() -> new ChristmasblocklightblueBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKYELLOW = REGISTRY.register("christmasblockyellow", () -> new ChristmasblockyellowBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKLIME = REGISTRY.register("christmasblocklime", () -> new ChristmasblocklimeBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKPINK = REGISTRY.register("christmasblockpink", () -> new ChristmasblockpinkBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKGRAY = REGISTRY.register("christmasblockgray", () -> new ChristmasblockgrayBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKLIGHTGRAY = REGISTRY.register("christmasblocklightgray",
			() -> new ChristmasblocklightgrayBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKCYAN = REGISTRY.register("christmasblockcyan", () -> new ChristmasblockcyanBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKPURPLE = REGISTRY.register("christmasblockpurple", () -> new ChristmasblockpurpleBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKBLUE = REGISTRY.register("christmasblockblue", () -> new ChristmasblockblueBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKBROWN = REGISTRY.register("christmasblockbrown", () -> new ChristmasblockbrownBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKGREEN = REGISTRY.register("christmasblockgreen", () -> new ChristmasblockgreenBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKRED = REGISTRY.register("christmasblockred", () -> new ChristmasblockredBlock());
	public static final RegistryObject<Block> CHRISTMASBLOCKBLACK = REGISTRY.register("christmasblockblack", () -> new ChristmasblockblackBlock());
	public static final RegistryObject<Block> CHRISTMASPUREWHITE = REGISTRY.register("christmaspurewhite", () -> new ChristmaspurewhiteBlock());
	public static final RegistryObject<Block> CHRISTMASPUREORANGE = REGISTRY.register("christmaspureorange", () -> new ChristmaspureorangeBlock());
	public static final RegistryObject<Block> CHRISTMASPUREMAGENTA = REGISTRY.register("christmaspuremagenta", () -> new ChristmaspuremagentaBlock());
	public static final RegistryObject<Block> CHRISTMASPURELIGHTBLUE = REGISTRY.register("christmaspurelightblue",
			() -> new ChristmaspurelightblueBlock());
	public static final RegistryObject<Block> CHRISTMASPUREYELLOW = REGISTRY.register("christmaspureyellow", () -> new ChristmaspureyellowBlock());
	public static final RegistryObject<Block> CHRISTMASPURELIME = REGISTRY.register("christmaspurelime", () -> new ChristmaspurelimeBlock());
	public static final RegistryObject<Block> CHRISTMASPUREPINK = REGISTRY.register("christmaspurepink", () -> new ChristmaspurepinkBlock());
	public static final RegistryObject<Block> CHRISTMASPUREGRAY = REGISTRY.register("christmaspuregray", () -> new ChristmaspuregrayBlock());
	public static final RegistryObject<Block> CHRISTMASPURELIGHTGRAY = REGISTRY.register("christmaspurelightgray",
			() -> new ChristmaspurelightgrayBlock());
	public static final RegistryObject<Block> CHRISTMASPURECYAN = REGISTRY.register("christmaspurecyan", () -> new ChristmaspurecyanBlock());
	public static final RegistryObject<Block> CHRISTMASPUREPURPLE = REGISTRY.register("christmaspurepurple", () -> new ChristmaspurepurpleBlock());
	public static final RegistryObject<Block> CHRISTMASPUREBLUE = REGISTRY.register("christmaspureblue", () -> new ChristmaspureblueBlock());
	public static final RegistryObject<Block> CHRISTMASPUREBROWN = REGISTRY.register("christmaspurebrown", () -> new ChristmaspurebrownBlock());
	public static final RegistryObject<Block> CHRISTMASPUREGREEN = REGISTRY.register("christmaspuregreen", () -> new ChristmaspuregreenBlock());
	public static final RegistryObject<Block> CHRISTMASPURERED = REGISTRY.register("christmaspurered", () -> new ChristmaspureredBlock());
	public static final RegistryObject<Block> CHRISTMASPUREBLACK = REGISTRY.register("christmaspureblack", () -> new ChristmaspureblackBlock());
	public static final RegistryObject<Block> COBBLESTONE = REGISTRY.register("cobblestone", () -> new CobblestoneBlock());
	public static final RegistryObject<Block> CRAFTING_TABLE = REGISTRY.register("crafting_table", () -> new CraftingTableBlock());
	public static final RegistryObject<Block> SKYBLOCKDIRT = REGISTRY.register("skyblockdirt", () -> new SkyblockdirtBlock());
	public static final RegistryObject<Block> FURNACE = REGISTRY.register("furnace", () -> new FurnaceBlock());
	public static final RegistryObject<Block> GLASSBLACK = REGISTRY.register("glassblack", () -> new GlassblackBlock());
	public static final RegistryObject<Block> GLASSBLUE = REGISTRY.register("glassblue", () -> new GlassblueBlock());
	public static final RegistryObject<Block> GLASSBROWN = REGISTRY.register("glassbrown", () -> new GlassbrownBlock());
	public static final RegistryObject<Block> GLASSCYAN = REGISTRY.register("glasscyan", () -> new GlasscyanBlock());
	public static final RegistryObject<Block> GLASSGRAY = REGISTRY.register("glassgray", () -> new GlassgrayBlock());
	public static final RegistryObject<Block> GLASSGREEN = REGISTRY.register("glassgreen", () -> new GlassgreenBlock());
	public static final RegistryObject<Block> GLASSLIGHTBLUE = REGISTRY.register("glasslightblue", () -> new GlasslightblueBlock());
	public static final RegistryObject<Block> GLASSLIME = REGISTRY.register("glasslime", () -> new GlasslimeBlock());
	public static final RegistryObject<Block> GLASSMAGENTA = REGISTRY.register("glassmagenta", () -> new GlassmagentaBlock());
	public static final RegistryObject<Block> GLASSNEW = REGISTRY.register("glassnew", () -> new GlassnewBlock());
	public static final RegistryObject<Block> GLASSORANGE = REGISTRY.register("glassorange", () -> new GlassorangeBlock());
	public static final RegistryObject<Block> GLASSPINK = REGISTRY.register("glasspink", () -> new GlasspinkBlock());
	public static final RegistryObject<Block> GLASSPURPLE = REGISTRY.register("glasspurple", () -> new GlasspurpleBlock());
	public static final RegistryObject<Block> GLASSRED = REGISTRY.register("glassred", () -> new GlassredBlock());
	public static final RegistryObject<Block> GLASSSILVER = REGISTRY.register("glasssilver", () -> new GlasssilverBlock());
	public static final RegistryObject<Block> GLASSWHITE = REGISTRY.register("glasswhite", () -> new GlasswhiteBlock());
	public static final RegistryObject<Block> GLASSYELLOW = REGISTRY.register("glassyellow", () -> new GlassyellowBlock());
	public static final RegistryObject<Block> GLASSPANEBLACK = REGISTRY.register("glasspaneblack", () -> new GlasspaneblackBlock());
	public static final RegistryObject<Block> GLASSPANEBLUE = REGISTRY.register("glasspaneblue", () -> new GlasspaneblueBlock());
	public static final RegistryObject<Block> GLASSPANEBROWN = REGISTRY.register("glasspanebrown", () -> new GlasspanebrownBlock());
	public static final RegistryObject<Block> GLASSPANECYAN = REGISTRY.register("glasspanecyan", () -> new GlasspanecyanBlock());
	public static final RegistryObject<Block> GLASSPANEGRAY = REGISTRY.register("glasspanegray", () -> new GlasspanegrayBlock());
	public static final RegistryObject<Block> GLASSPANEGREEN = REGISTRY.register("glasspanegreen", () -> new GlasspanegreenBlock());
	public static final RegistryObject<Block> GLASSPANELIGHTBLUE = REGISTRY.register("glasspanelightblue", () -> new GlasspanelightblueBlock());
	public static final RegistryObject<Block> GLASSPANELIME = REGISTRY.register("glasspanelime", () -> new GlasspanelimeBlock());
	public static final RegistryObject<Block> GLASSPANEMAGENTA = REGISTRY.register("glasspanemagenta", () -> new GlasspanemagentaBlock());
	public static final RegistryObject<Block> GLASSPANEORANGE = REGISTRY.register("glasspaneorange", () -> new GlasspaneorangeBlock());
	public static final RegistryObject<Block> GLASSPANEPINK = REGISTRY.register("glasspanepink", () -> new GlasspanepinkBlock());
	public static final RegistryObject<Block> GLASSPANEPURPLE = REGISTRY.register("glasspanepurple", () -> new GlasspanepurpleBlock());
	public static final RegistryObject<Block> GLASSPANERED = REGISTRY.register("glasspanered", () -> new GlasspaneredBlock());
	public static final RegistryObject<Block> GLASSPANESILVER = REGISTRY.register("glasspanesilver", () -> new GlasspanesilverBlock());
	public static final RegistryObject<Block> GLASSPANEWHITE = REGISTRY.register("glasspanewhite", () -> new GlasspanewhiteBlock());
	public static final RegistryObject<Block> GLASSPANEYELLOW = REGISTRY.register("glasspaneyellow", () -> new GlasspaneyellowBlock());
	public static final RegistryObject<Block> SKYBLOCKGRASS = REGISTRY.register("skyblockgrass", () -> new SkyblockgrassBlock());
	public static final RegistryObject<Block> GOLDBARS = REGISTRY.register("goldbars", () -> new GoldbarsBlock());
	public static final RegistryObject<Block> MONEYBLOCK = REGISTRY.register("moneyblock", () -> new MoneyblockBlock());
	public static final RegistryObject<Block> GIFTGREEN = REGISTRY.register("giftgreen", () -> new GiftgreenBlock());
	public static final RegistryObject<Block> GIFTRED = REGISTRY.register("giftred", () -> new GiftredBlock());
	public static final RegistryObject<Block> GIFTYELLOW = REGISTRY.register("giftyellow", () -> new GiftyellowBlock());
	public static final RegistryObject<Block> STARBLOCK = REGISTRY.register("starblock", () -> new StarblockBlock());
	public static final RegistryObject<Block> SILVERBAR = REGISTRY.register("silverbar", () -> new SilverbarBlock());
	public static final RegistryObject<Block> COARSEDIRT = REGISTRY.register("coarsedirt", () -> new CoarsedirtBlock());
	public static final RegistryObject<Block> GREENGIFT = REGISTRY.register("greengift", () -> new GreengiftBlock());
	public static final RegistryObject<Block> REDGIFT = REGISTRY.register("redgift", () -> new RedgiftBlock());
	public static final RegistryObject<Block> YELLOWGIFT = REGISTRY.register("yellowgift", () -> new YellowgiftBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERBLACK = REGISTRY.register("concretepowderblack", () -> new ConcretepowderblackBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERBLUE = REGISTRY.register("concretepowderblue", () -> new ConcretepowderblueBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERBROWN = REGISTRY.register("concretepowderbrown", () -> new ConcretepowderbrownBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERCYAN = REGISTRY.register("concretepowdercyan", () -> new ConcretepowdercyanBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERGRAY = REGISTRY.register("concretepowdergray", () -> new ConcretepowdergrayBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERGREEN = REGISTRY.register("concretepowdergreen", () -> new ConcretepowdergreenBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERLIGHTBLUE = REGISTRY.register("concretepowderlightblue",
			() -> new ConcretepowderlightblueBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERLIME = REGISTRY.register("concretepowderlime", () -> new ConcretepowderlimeBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERMAGENTA = REGISTRY.register("concretepowdermagenta",
			() -> new ConcretepowdermagentaBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERORANGE = REGISTRY.register("concretepowderorange", () -> new ConcretepowderorangeBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERPINK = REGISTRY.register("concretepowderpink", () -> new ConcretepowderpinkBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERRED = REGISTRY.register("concretepowderred", () -> new ConcretepowderredBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERPURPLE = REGISTRY.register("concretepowderpurple", () -> new ConcretepowderpurpleBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERSILVER = REGISTRY.register("concretepowdersilver", () -> new ConcretepowdersilverBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERWHITE = REGISTRY.register("concretepowderwhite", () -> new ConcretepowderwhiteBlock());
	public static final RegistryObject<Block> CONCRETEPOWDERYELLOW = REGISTRY.register("concretepowderyellow", () -> new ConcretepowderyellowBlock());
	public static final RegistryObject<Block> DIRTOLDPODZOL = REGISTRY.register("dirtoldpodzol", () -> new DirtoldpodzolBlock());
	public static final RegistryObject<Block> ENDBRICK = REGISTRY.register("endbrick", () -> new EndbrickBlock());
	public static final RegistryObject<Block> GLASSPURPLE_2 = REGISTRY.register("glasspurple_2", () -> new Glasspurple2Block());
	public static final RegistryObject<Block> GLASSSILVER_2 = REGISTRY.register("glasssilver_2", () -> new Glasssilver2Block());
	public static final RegistryObject<Block> HELLGLOWSTONE = REGISTRY.register("hellglowstone", () -> new HellglowstoneBlock());
	public static final RegistryObject<Block> OLDDIRTPATH = REGISTRY.register("olddirtpath", () -> new OlddirtpathBlock());
	public static final RegistryObject<Block> IRONTRAPDOOR = REGISTRY.register("irontrapdoor", () -> new IrontrapdoorBlock());
	public static final RegistryObject<Block> JUNGLELOG_2 = REGISTRY.register("junglelog_2", () -> new Junglelog2Block());
	public static final RegistryObject<Block> LUCKYBLOCKSTRANGE = REGISTRY.register("luckyblockstrange", () -> new LuckyblockstrangeBlock());
	public static final RegistryObject<Block> NETHERWARTBLOCK = REGISTRY.register("netherwartblock", () -> new NetherwartblockBlock());
	public static final RegistryObject<Block> OBSERVER = REGISTRY.register("observer", () -> new ObserverBlock());
	public static final RegistryObject<Block> STICKYPISTON = REGISTRY.register("stickypiston", () -> new StickypistonBlock());
	public static final RegistryObject<Block> ROUGHPRISMARINE = REGISTRY.register("roughprismarine", () -> new RoughprismarineBlock());
	public static final RegistryObject<Block> PUMPKINLIT = REGISTRY.register("pumpkinlit", () -> new PumpkinlitBlock());
	public static final RegistryObject<Block> REDSANDSTONECARVED_2 = REGISTRY.register("redsandstonecarved_2", () -> new Redsandstonecarved2Block());
	public static final RegistryObject<Block> REDSTONELAMP_2 = REGISTRY.register("redstonelamp_2", () -> new Redstonelamp2Block());
	public static final RegistryObject<Block> CARPETROAD = REGISTRY.register("carpetroad", () -> new CarpetroadBlock());
	public static final RegistryObject<Block> SANDSTONESMOOTH_2 = REGISTRY.register("sandstonesmooth_2", () -> new Sandstonesmooth2Block());
	public static final RegistryObject<Block> TOWER = REGISTRY.register("tower", () -> new TowerBlock());
	public static final RegistryObject<Block> WALLOFWOOL = REGISTRY.register("wallofwool", () -> new WallofwoolBlock());
	public static final RegistryObject<Block> ENDSTONE = REGISTRY.register("endstone", () -> new EndstoneBlock());
	public static final RegistryObject<Block> BWDEFENCEGLASS = REGISTRY.register("bwdefenceglass", () -> new BwdefenceglassBlock());
	public static final RegistryObject<Block> BEDWARSSPONGE = REGISTRY.register("bedwarssponge", () -> new BedwarsspongeBlock());
	public static final RegistryObject<Block> LUCKYBLOCKARMOR = REGISTRY.register("luckyblockarmor", () -> new LuckyblockarmorBlock());
	public static final RegistryObject<Block> LUCKYBLOCKEVENT = REGISTRY.register("luckyblockevent", () -> new LuckyblockeventBlock());
	public static final RegistryObject<Block> LUCKYBLOCKWEAPON = REGISTRY.register("luckyblockweapon", () -> new LuckyblockweaponBlock());
	public static final RegistryObject<Block> LUCKYBLOCKPROP = REGISTRY.register("luckyblockprop", () -> new LuckyblockpropBlock());
	public static final RegistryObject<Block> BROWNMUSHROOMSMALL = REGISTRY.register("brownmushroomsmall", () -> new BrownmushroomsmallBlock());
	public static final RegistryObject<Block> REDMUSHROOMSMALL = REGISTRY.register("redmushroomsmall", () -> new RedmushroomsmallBlock());
	public static final RegistryObject<Block> OBSIDIANBEDWARS = REGISTRY.register("obsidianbedwars", () -> new ObsidianbedwarsBlock());
	public static final RegistryObject<Block> VINE = REGISTRY.register("vine", () -> new VineBlock());
	public static final RegistryObject<Block> MOVINGPISTON = REGISTRY.register("movingpiston", () -> new MovingpistonBlock());
	public static final RegistryObject<Block> REDSTONELAMPON = REGISTRY.register("redstonelampon", () -> new RedstonelamponBlock());
	public static final RegistryObject<Block> WATER = REGISTRY.register("water", () -> new WaterBlock());
	public static final RegistryObject<Block> LAVA = REGISTRY.register("lava", () -> new LavaBlock());

	@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
	public static class ClientSideHandler {
		@SubscribeEvent
		public static void clientSetup(FMLClientSetupEvent event) {
			AirwallBlock.registerRenderLayer();
			GlassBlock.registerRenderLayer();
			GlasspaneBlock.registerRenderLayer();
			IronbarBlock.registerRenderLayer();
			LadderBlock.registerRenderLayer();
			MobspawnerBlock.registerRenderLayer();
			RedstonetorchBlock.registerRenderLayer();
			SugarcaneBlock.registerRenderLayer();
			TorchBlock.registerRenderLayer();
			TrapdoorBlock.registerRenderLayer();
			WebBlock.registerRenderLayer();
			GlassblackBlock.registerRenderLayer();
			GlassblueBlock.registerRenderLayer();
			GlassbrownBlock.registerRenderLayer();
			GlasscyanBlock.registerRenderLayer();
			GlassgrayBlock.registerRenderLayer();
			GlassgreenBlock.registerRenderLayer();
			GlasslightblueBlock.registerRenderLayer();
			GlasslimeBlock.registerRenderLayer();
			GlassmagentaBlock.registerRenderLayer();
			GlassnewBlock.registerRenderLayer();
			GlassorangeBlock.registerRenderLayer();
			GlasspinkBlock.registerRenderLayer();
			GlasspurpleBlock.registerRenderLayer();
			GlassredBlock.registerRenderLayer();
			GlasssilverBlock.registerRenderLayer();
			GlasswhiteBlock.registerRenderLayer();
			GlassyellowBlock.registerRenderLayer();
			GlasspaneblackBlock.registerRenderLayer();
			GlasspaneblueBlock.registerRenderLayer();
			GlasspanebrownBlock.registerRenderLayer();
			GlasspanecyanBlock.registerRenderLayer();
			GlasspanegrayBlock.registerRenderLayer();
			GlasspanegreenBlock.registerRenderLayer();
			GlasspanelightblueBlock.registerRenderLayer();
			GlasspanelimeBlock.registerRenderLayer();
			GlasspanemagentaBlock.registerRenderLayer();
			GlasspaneorangeBlock.registerRenderLayer();
			GlasspanepinkBlock.registerRenderLayer();
			GlasspanepurpleBlock.registerRenderLayer();
			GlasspaneredBlock.registerRenderLayer();
			GlasspanesilverBlock.registerRenderLayer();
			GlasspanewhiteBlock.registerRenderLayer();
			GlasspaneyellowBlock.registerRenderLayer();
			Glasspurple2Block.registerRenderLayer();
			Glasssilver2Block.registerRenderLayer();
			IrontrapdoorBlock.registerRenderLayer();
			CarpetroadBlock.registerRenderLayer();
			BrownmushroomsmallBlock.registerRenderLayer();
			RedmushroomsmallBlock.registerRenderLayer();
			VineBlock.registerRenderLayer();
			MovingpistonBlock.registerRenderLayer();
		}

		@SubscribeEvent
		public static void blockColorLoad(ColorHandlerEvent.Block event) {
			VineBlock.blockColorLoad(event);
		}

		@SubscribeEvent
		public static void itemColorLoad(ColorHandlerEvent.Item event) {
			VineBlock.itemColorLoad(event);
		}
	}
}
